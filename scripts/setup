#!/bin/bash
set -e

# execute script path
MY_PATH=$(dirname $(readlink -f $0))
# Default values for options
INSTALL_DOCKER=false
INSTALL_GO_LANG=false
INSTALL_NODE=false
INSTALL_NGINX=false
INSTALL_MONGODB=false
INSTALL_IPFS=false
MODIFY_DOCKER_NODE=false
MODIFY_DOCKER_REACT=false
# TOUCH FILES
TOUCH_AUTHROIZED_KEYS=false

# Import Create Direcory functions
source $MY_PATH/clone/docker.sh
source $MY_PATH/bin/install.sh

# Usage information
function usage() {
	echo "Usage: $0"
	echo "Options:"
	echo "  -d, --docker  Install Docker"
	echo "  -g, --golang Install GoLang"
	echo "  -n, --nodejs  Install Node.js"
	echo "  -x, --nginx   Install Nginx"
	echo "  -m, --mongodb Install MongoDB"
	echo "  -if, --ipfs Install IPFS"
	echo "  -dn, --docker_node Copy Docker files and mondify"
	echo "  -dr, --docker_react Copy Docker files and mondify"
	echo "  -ssh, ssh setup"
}

# Parse options
while [[ $# -gt 0 ]]; do
	key="$1"
	shift

	case $key in
	-d | --docker)
		INSTALL_DOCKER=true
		;;
	-g | --golang)
		INSTALL_GO_LANG=true
		;;
	-n | --nodejs)
		INSTALL_NODE=true
		;;
	-x | --nginx)
		INSTALL_NGINX=true
		;;
	-m | --mongodb)
		INSTALL_MONGODB=true
		;;
	-if | --ipfs)
		INSTALL_IPFS=true
		;;
	-dn | --docker_node)
		MODIFY_DOCKER_NODE=true
		;;
	-dr | --docker_react)
		MODIFY_DOCKER_REACT=true
		;;
	-ssh)
		TOUCH_AUTHROIZED_KEYS=true
		;;
	*)
		# unknown option
		echo "Invalid option: $key" 1>&2
		usage
		exit 1
		;;
	esac
done

if $INSTALL_DOCKER; then
	install_docker
fi

if $INSTALL_GO_LANG; then
	install_golang
fi

if $INSTALL_NODE; then
	install_nodejs
fi

if $INSTALL_NGINX; then
	clone_nginx
	source /project/nginx/start.sh
fi

if $INSTALL_MONGODB; then
	clone_mongodb
fi

if $INSTALL_IPFS; then
	install_ipfs
fi

if $MODIFY_DOCKER_NODE; then
	cp -r $MY_PATH/../data/docker/node/. ./
	current_path="$(basename $(pwd))"
	sed -i "s/project-name/$current_path/g" docker-compose.yml
fi

if $MODIFY_DOCKER_REACT; then
	cp -r $MY_PATH/../data/docker/react/. ./
	current_path="$(basename $(pwd))"
	sed -i "s/project-name/$current_path/g" docker-compose.yml
fi

if $TOUCH_AUTHROIZED_KEYS; then
	touch ~/.ssh/authorized_keys
	chmod 600 ~/.ssh/authorized_keys
	vi ~/.ssh/authorized_keys
fi

# Final message
echo "Setup complete."
